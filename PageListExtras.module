<?php namespace ProcessWire;

class PageListExtras extends WireData implements Module {

	/**
	 * Module information
	 */
	public static function getModuleInfo() {
		return array(
			'title' => 'Page List Extras',
			'version' => '0.1.5',
			'summary' => 'Adds page ID and template name to the page list, for superuser only.',
			'author' => 'Robin Sallis',
			'href' => 'https://github.com/Toutouwai/PageListExtras',
			'icon' => 'ellipsis-h',
			'autoload' => 'template=admin',
			'requires' => 'ProcessWire>=3.0.0',
		);
	}

	/**
	 * Ready
	 */
	public function ready() {
		if($this->user->isSuperuser()){
			$this->addHookAfter('ProcessPageListRender::getPageLabel', $this, 'addExtras');
			$this->addHookAfter('ProcessController::execute', $this, 'addStylesheet');
		}
	}

	/**
	 * Add extras
	 *
	 * @param HookEvent $event
	 */
	public function addExtras(HookEvent $event){
		$page = $event->arguments(0);
		$options = $event->arguments(1);
		// Return if this label is for the Tree dropdown menus
		if(!empty($options['noTags'])) return;
		// Return if this label is for a Page List Select
		if($this->wire()->input->get('mode') === 'select') return;
		$event->return .= " <span class='helper-info'>($page->id, $page->template)</span> ";
	}

	/**
	 * Add stylesheet
	 *
	 * @param HookEvent $event
	 */
	public function addStylesheet(HookEvent $event){
		$info = $this->getModuleInfo();
		$version = $info['version'];
		$config = $this->wire()->config;
		$config->styles->add($config->urls->$this . "{$this}.css?v=$version");
	}

}
